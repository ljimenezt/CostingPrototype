<?xml version="1.0" encoding="UTF-8"?>
<project name="PrototipoCostos" default="gf-deploy" basedir=".">
	<description>PrototipoCostos</description>

	<!-- set global properties for this build -->
	<property name="project.name" value="PrototipoCostos" />
	<property name="glassfish.home" value="K:/glassfish4/glassfish" />
	<property name="jboss.home" value="C:/jboss-6.0.0.Final" />
	<property name="glassfish.domain" value="domain1" />
	<property name="deploy.dir" value="${jboss.home}/server/default/deploy" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" value="WebContent/WEB-INF/lib" />
	<property name="src.dir" value="src" />
	<property name="ear.dir" value="exploded-archives/${project.name}.ear" />
	<property name="jar.dir" value="exploded-archives/${project.name}.jar" />
	<property name="war.dir" value="exploded-archives/${project.name}.war" />
	<property name="ear.deploy.dir" value="${deploy.dir}/${project.name}.ear" />
	<property name="jar.deploy.dir" value="${deploy.dir}/${project.name}.jar" />
	<property name="war.deploy.dir" value="${deploy.dir}/${project.name}.war" />
	<property name="packaged.archive" value="${dist.dir}/${project.name}.ear" />
	<property name="javac.debug" value="true" />
	<property name="javac.deprecation" value="false" />
	<property name="javac.includeantruntime" value="false" />
	<property name="debug" value="false" />
	<property name="profile" value="dev" />
	<property name="connection.pool.name" value="${project.name}Pool" />

	<fileset id="lib" dir="${lib.dir}">
		<include name="*.jar" />
	</fileset>

	<path id="build.classpath">
		<fileset refid="lib" />
	</path>

	<macrodef name="asadmin">
		<attribute name="cmd" />
		<attribute name="args" default="" />
		<attribute name="log" default="true" />
		<element name="pre-conditions" optional="true" />
		<sequential>
			<fail message="glassfish.home not set" unless="glassfish.home" />
			<fail message="glassfish.home does not point to a valid GlassFish installation">
				<condition>
					<or>
						<length string="${glassfish.home}" trim="true" length="0" />
						<and>
							<not>
								<os family="windows" />
							</not>
							<not>
								<available file="${glassfish.home}/bin/asadmin" />
							</not>
						</and>
						<and>
							<os family="windows" />
							<not>
								<available file="${glassfish.home}/bin/asadmin.bat" />
							</not>
						</and>
					</or>
				</condition>
			</fail>
			<condition property="glassfish.domains.dir" value="${glassfish.home}/glassfish/domains" else="${glassfish.home}/domains">
				<available file="${glassfish.home}/glassfish" type="dir" />
			</condition>
			<fail message="glassfish.domain not set" unless="glassfish.domain" />
			<fail message="glassfish.domain not a valid GlassFish domain">
				<condition>
					<or>
						<length string="${glassfish.domain}" trim="true" length="0" />
						<not>
							<available file="${glassfish.domains.dir}/${glassfish.domain}" type="dir" />
						</not>
					</or>
				</condition>
			</fail>
			<pre-conditions />
			<!-- Windows batch files (.bat) cannot be executed directly. Must be executed using the command shell (cmd.exe) with the /c switch. -->
			<condition property="asadmin.cmd" value="cmd.exe">
				<os family="windows" />
			</condition>
			<condition property="asadmin.arg1" value="/c ${glassfish.home}/bin/asadmin">
				<os family="windows" />
			</condition>
			<property name="asadmin.cmd" value="${glassfish.home}/bin/asadmin" />
			<property name="asadmin.arg1" value="" />
			<exec executable="${asadmin.cmd}">
				<arg line="${asadmin.arg1}" />
				<arg value="@{cmd}" />
				<arg line="@{args}" />
				<redirector outputproperty="gf.cmd.output" alwayslog="@{log}" />
			</exec>
		</sequential>
	</macrodef>

	<target name="init" description="Initialize the build">
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${ear.dir}" />
		<mkdir dir="${war.dir}" />
		<mkdir dir="${dist.dir}" />

		<condition property="is.debug" value="true">
			<istrue value="${debug}" />
		</condition>
	</target>

	<target name="compile" depends="init" description="Compile the Java source code">
		<javac classpathref="build.classpath" destdir="${jar.dir}" debug="${javac.debug}" deprecation="${javac.deprecation}" nowarn="on" includeantruntime="${javac.includeantruntime}">
			<src path="${src.dir}" />
		</javac>
		<copy todir="${jar.dir}/META-INF">
			<fileset dir="${basedir}/resources/META-INF">
				<include name="persistence.xml" />
			</fileset>
		</copy>
	</target>

	<target name="jar" depends="compile" description="Build the JAR structure in a staging directory">
		<jar basedir="${jar.dir}" destfile="${dist.dir}/${project.name}.jar" />
	</target>

	<target name="war" depends="compile" description="Build the WAR structure in a staging directory">
		<copy todir="${war.dir}/WEB-INF/classes">
			<fileset dir="${jar.dir}" />
		</copy>
		<copy todir="${war.dir}">
			<fileset dir="${basedir}/WebContent/">
				<exclude name="WEB-INF/lib/weld*.*" />
			</fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF/classes">
			<fileset dir="${basedir}/resources/idioma/" />
		</copy>
		<jar basedir="${war.dir}" destfile="${dist.dir}/${project.name}.war" />
	</target>

	<target name="war-JBoss" depends="compile" description="Build the WAR structure in a staging directory">
		<copy todir="${war.dir}/WEB-INF/classes">
			<fileset dir="${jar.dir}" />
		</copy>
		<copy todir="${war.dir}/WEB-INF/lib">
			<fileset dir="${basedir}/WebContent/WEB-INF/lib">
				<includesfile name="deployed-jars-war.list" />
			</fileset>
		</copy>
		<copy todir="${war.dir}">
			<fileset dir="${basedir}/WebContent">
				<exclude name="WEB-INF/lib/*.jar" />
			</fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF/classes">
			<fileset dir="${basedir}/resources/idioma/" />
		</copy>
		<jar basedir="${war.dir}" destfile="${dist.dir}/${project.name}.war" />
	</target>

	<target name="ear" depends="clean,jar,war" description="Build the EAR structure in a staging directory">
		<copy todir="${ear.dir}/lib">
			<fileset dir="${lib.dir}">
				<includesfile name="deployed-jars-ear.list" />
			</fileset>
		</copy>
		<copy todir="${ear.dir}/META-INF">
			<fileset dir="${basedir}/resources/META-INF">
				<include name="application.xml" />
			</fileset>
		</copy>
		<copy todir="${ear.dir}">
			<fileset dir="${dist.dir}">
				<include name="${project.name}.jar" />
				<include name="${project.name}.war" />
			</fileset>
		</copy>

		<jar basedir="${ear.dir}" destfile="${dist.dir}/${project.name}.ear" />
	</target>

	<target name="clean" description="Cleans up the staging directory">
		<delete dir="${dist.dir}" />
		<delete dir="${basedir}/exploded-archives" />
	</target>

	<target name="datasource">
		<copy todir="${deploy.dir}" file="${basedir}/resources/${project.name}-${profile}-ds.xml" />
	</target>

	<target name="deploy" depends="clean,war-JBoss,datasource">
		<copy todir="${deploy.dir}" file="${dist.dir}/${project.name}.war" />
	</target>

	<target name="undeploy" description="Undeploy the packaged archive">
		<delete file="${deploy.dir}/${project.name}.war" />
		<delete file="${deploy.dir}/${project.name}-ds.xml" />
	</target>

	<target name="gf-deploy" depends="clean,gf-delete-datasource,gf-undeploy,war,gf-datasource" description="Deploy the datasource and packaged archive to GlassFish">
		<asadmin cmd="deploy" args="--name ${project.name} ${dist.dir}/${project.name}.war" />
	</target>

	<target name="gf-undeploy" description="Undeploy the archive from GlassFish">
		<asadmin cmd="undeploy" args="${project.name}" />
	</target>

	<target name="gf-delete-datasource">
		<asadmin cmd="delete-jdbc-connection-pool" args="--cascade true ${connection.pool.name}" />
	</target>

	<target name="gf-datasource">
		<asadmin cmd="add-resources" args="${basedir}/resources/glassfish-resources-${profile}.xml" />
	</target>

	<target name="gf-explode" depends="gf-undeploy,war,gf-datasource" description="Deploy the project in explode mode into GlassFish">
		<asadmin cmd="deploy" args="--name ${project.name} ${war.dir}" />
	</target>
</project>
